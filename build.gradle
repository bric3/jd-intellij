import org.jsoup.Jsoup

plugins {
    id("java")
    id("org.jetbrains.intellij") version("1.0")
    id("org.asciidoctor.jvm.convert") version("3.3.2")
    id("com.github.ben-manes.versions") version("0.39.0")
}

group 'com.github.bric3'

repositories {
    //noinspection JCenterRepository
    jcenter()  // for jd-core
}

dependencies {
    implementation("org.jd:jd-core:1.1.3")
    implementation("com.google.guava:guava:30.1.1-jre")
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.assertj:assertj-core:3.19.0")
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

asciidoctor {
    sourceDir file('.')
    sources {
        include 'CHANGELOG.adoc'
    }
    outputDir file('build/docs')
}

// See https://github.com/JetBrains/gradle-intellij-plugin/
intellij {
    // http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html
    version = '2021.1'
    plugins = ['com.intellij.java']
    pluginName = 'jd-intellij'
//  updateSinceUntilBuild false
}

patchPluginXml {
    dependsOn asciidoctor
    version = project.version
    untilBuild = null
    changeNotes = providers.provider({
        Jsoup.parse(file('build/docs/CHANGELOG.html').getText('UTF-8'))
                .select("#releasenotes")
                .get(0)
                .nextElementSibling()
                .children()
                .stream()
                .map { e ->
                    e.html().replaceAll('\\(preview, available from GitHub releases\\)', '')
                            .replaceAll('#([0-9]+)', '<a href="https://github.com/bric3/jd-intellij/issues/$1">#$1</a>')
                    // regex for GitHub user names from https://github.com/shinnn/github-username-regex
                            .replaceAll('(?i)@([a-z\\d](?:[a-z\\d]|-(?=[a-z\\d])){0,38})', '<a href="https://github.com/$1">@$1</a>')
                }
                .collect()
                .join("\n")
    })
//  pluginDescription "${file('src/main/resources/META-INF/description.html').getText('UTF-8')}"
}

runPluginVerifier {
    ideVersions = project.pluginVerifierIdeVersions.tokenize(',')
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

tasks.withType(JavaCompile) {
    options.release.set(11)
}