<?xml version="1.0" encoding="UTF-8"?>
<project name="jd-intellij" default="make">

    <condition property="isWindows">
        <os family="windows" />
    </condition>
    <condition property="isMac" >
        <os family="mac" />
    </condition>
    <condition property="isUnix" >
        <and>
            <os family="unix"/>
            <not>
                <os family="mac"/>
            </not>
        </and>
    </condition>

    <condition property="property.filename" value="jd-intellij-win32.properties">
        <istrue value="${isWindows}" />
    </condition>
    <condition property="property.filename" value="jd-intellij-osx.properties">
        <istrue value="${isMac}" />
    </condition>

    <fail if="isUnix" message="Unix/Linux packaging is not yet supported, contribution is welcome." />

    <property file="jd-intellij.properties" />
    <property file="${property.filename}" />

    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/*.orig/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.ane"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>

        <!--
            native libs are included in the 'Compiler Resources of the IntelliJ project file
            in order to be deployed on the sandbox (in order to run/debug the plugin).

            But for the purpose of this packaging script we don't want to export the native libs in classpath.
        -->
        <!--<include name="**/?*.so"/>-->
        <!--<include name="**/?*.dll"/>-->
        <!--<include name="**/?*.jnilib"/>-->
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin" value="${jdk.home}/bin"/>

    <!-- Windows JDK classpath -->
    <fileset id="windows.jdk.classpath" dir="${jdk.home}" >
        <include name="jre/lib/charsets.jar" if="isWindows"/>
        <include name="jre/lib/deploy.jar" if="isWindows" />
        <include name="jre/lib/javaws.jar" if="isWindows" />
        <include name="jre/lib/jce.jar" if="isWindows" />
        <include name="jre/lib/jsse.jar" if="isWindows" />
        <include name="jre/lib/management-agent.jar" if="isWindows" />
        <include name="jre/lib/plugin.jar" if="isWindows" />
        <include name="jre/lib/resources.jar" if="isWindows" />
        <include name="jre/lib/rt.jar" if="isWindows" />
        <include name="jre/lib/ext/dnsns.jar" if="isWindows" />
        <include name="jre/lib/ext/localedata.jar" if="isWindows" />
        <include name="jre/lib/ext/sunjce_provider.jar" if="isWindows" />
        <include name="jre/lib/ext/sunmscapi.jar" if="isWindows" />
        <include name="jre/lib/ext/sunpkcs11.jar" if="isWindows" />
    </fileset>

    <!-- Mac OSX JDK classpath -->
    <fileset id="osx.jdk.classpath" dir="${jdk.home}/.." >
        <include name="Home/lib/deploy.jar" if="isMac" />
        <include name="Home/lib/dt.jar" if="isMac" />
        <include name="Home/lib/javaws.jar" if="isMac" />
        <include name="Home/lib/jce.jar" if="isMac" />
        <include name="Home/lib/jconsole.jar" if="isMac" />
        <include name="Home/lib/management-agent.jar" if="isMac" />
        <include name="Home/lib/plugin.jar" if="isMac" />
        <include name="Home/lib/sa-jdi.jar" if="isMac" />
        <include name="Classes/alt-rt.jar" if="isMac" />
        <include name="Classes/alt-string.jar" if="isMac" />
        <include name="Classes/charsets.jar" if="isMac" />
        <include name="Classes/classes.jar" if="isMac" />
        <include name="Classes/jsse.jar" if="isMac" />
        <include name="Classes/ui.jar" if="isMac" />
        <include name="Home/lib/ext/apple_provider.jar" if="isMac" />
        <include name="Home/lib/ext/dnsns.jar" if="isMac" />
        <include name="Home/lib/ext/localedata.jar" if="isMac" />
        <include name="Home/lib/ext/sunjce_provider.jar" if="isMac" />
        <include name="Home/lib/ext/sunpkcs11.jar" if="isMac" />
    </fileset>


    <!-- This classpath has been striped of many other dependencies contained in the IntelliJ app -->
    <path id="idea.classpath">
        <fileset refid="windows.jdk.classpath" />
        <fileset refid="osx.jdk.classpath" />
        <fileset dir="${idea.home}">
            <include name="lib/annotations.jar"/>
            <include name="lib/boot.jar"/>
            <include name="lib/bootstrap.jar"/>
            <include name="lib/commons-lang-2.4.jar"/>
            <include name="lib/extensions.jar"/>
            <include name="lib/forms_rt.jar"/>
            <include name="lib/icons.jar"/>
            <include name="lib/idea.jar"/>
            <include name="lib/idea_rt.jar"/>
            <include name="lib/jcip-annotations.jar"/>
            <include name="lib/jdkAnnotations.jar"/>
            <include name="lib/jdom.jar"/>
            <include name="lib/jna-utils.jar"/>
            <include name="lib/jna.jar"/>
            <include name="lib/jsr173_1.0_api.jar"/>
            <include name="lib/openapi.jar"/>
            <include name="lib/optimizedFileManager.jar"/>
            <include name="lib/picocontainer.jar"/>
            <include name="lib/resources.jar"/>
            <include name="lib/resources_en.jar"/>
            <include name="lib/swingx-core-1.6.2.jar"/>
            <include name="lib/util.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${idea.home}"/>
    <property name="project.jdk.bin" value="${jdk.bin}"/>
    <property name="project.jdk.classpath" value="idea.classpath"/>




    <!-- Register Custom Compiler Taskdefs note that classpath matches IntelliJ 11 dependencies -->
    <property name="javac2.home" value="${idea.home}/lib"/>
    <path id="javac2.classpath">
        <pathelement location="${javac2.home}/javac2.jar"/>
        <pathelement location="${javac2.home}/jdom.jar"/>
        <pathelement location="${javac2.home}/asm.jar"/>
        <pathelement location="${javac2.home}/asm-commons.jar"/>
        <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
    </path>

    <target name="register.custom.compilers">
        <echo message="${toString:idea.classpath}"/>
        <taskdef name="javac2"
                 classname="com.intellij.ant.Javac2"
                 classpathref="javac2.classpath"
                />
        <taskdef name="instrumentIdeaExtensions"
                 classname="com.intellij.ant.InstrumentIdeaExtensions"
                 classpathref="javac2.classpath"
                />
    </target>



    <!-- Modules -->
    <import file="${basedir}/module_jd-intellij.xml"/>



    <!-- Main tasks -->
    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.jd-intellij" description="cleanup all"/>

    <target name="make" depends="init, clean, plugin.build.deploy.jd-intellij" description="build all modules"/>
</project>